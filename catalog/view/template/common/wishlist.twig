{{ header }}
 <!-- Page Title -->
 <section class="s-page-title">
            <div class="container">
                <div class="content">
                    <h1 class="title-page">Your Wishlist</h1>
                    <ul class="breadcrumbs-page">
                        <li><a href="index.html" class="h6 link">Home</a></li>
                        <li class="d-flex"><i class="icon icon-caret-right"></i></li>
                        <li>
                            <h6 class="current-page fw-normal">Wishlist</h6>
                        </li>
                    </ul>
                </div>
            </div>
        </section>
        <!-- /Page Title -->
        <!-- Wishlist -->
        <div class="mt-5 flat-spacing pt-0">
            <div class="container">
                <div class="tf-grid-layout tf-col-2 md-col-3 xl-col-4 wrapper-wishlist">
                  
                 
                
                
                <!-- Pagination -->
                    
                
                

                
                  
                </div>
            </div>
        </div>
        <!-- /Wishlist -->




    

    <script>
        $(document).ready(function() {
           console.log(localStorage.getItem('offline_wishlist'));
           
           // Get offline wishlist product IDs
           const offlineWishlist = JSON.parse(localStorage.getItem('offline_wishlist') || '[]');
           console.log('Offline wishlist:', offlineWishlist);
           
                      // Render products from offline wishlist
           if (offlineWishlist.length > 0) {
               offlineWishlist.forEach(productId => {
                   fetch(`index.php?route=common/wishlist.getProduct&product_id=${productId}`)
                       .then(response => response.json())
                       .then(data => {
                           if (data.success) {
                               const product = data.data;
                               console.log(product);
                               const productHtml = `
                                   <div class="card-product grid style-2" data-product-id="${product.product_id}">
                                       <div class="card-product_wrapper">
                                           <a href="index.php?route=product/product&product_id=${product.product_id}" class="product-img">
                                               <img class="lazyload img-product" src="${product.thumb || 'assets/images/products/product-7.jpg'}" data-src="${product.thumb || 'assets/images/products/product-7.jpg'}" alt="${product.name}">
                                               <img class="lazyload img-hover" src="${product.popup || 'assets/images/products/product-8.jpg'}" data-src="${product.popup || 'assets/images/products/product-8.jpg'}" alt="${product.name}">
                                           </a>
                                           <span class="remove box-icon" onclick="removeFromWishlist(${product.product_id})">
                                               <i class="icon icon-trash"></i>
                                           </span>
                                           <ul class="product-action_list">
                                               <li>
                                                   <a href="#shoppingCart" data-bs-toggle="offcanvas" class="hover-tooltip box-icon">
                                                       <span class="icon icon-shopping-cart-simple"></span>
                                                       <span class="tooltip">Add to cart</span>
                                                   </a>
                                               </li>
                                           </ul>
                                       </div>
                                       <div class="card-product_info">
                                           <a href="index.php?route=product/product&product_id=${product.product_id}" class="name-product h4 link">${product.name}</a>
                                           <div class="price-wrap">
                                               <span class="price-old h6 fw-normal">$${product.price || '109.99'}</span>
                                               <span class="price-new h6">$${product.special || product.price || '74.99'}</span>
                                           </div>
                                           <ul class="product-color_list">
                                               ${product.color_options && product.color_options.length > 0 ? 
                                                   product.color_options.map((color, index) => `
                                                       <li class="product-color-item color-swatch hover-tooltip tooltip-bot ${index === 0 ? 'active' : ''}">
                                                           <span class="tooltip color-filter">${color.name}</span>
                                                           <span class="swatch-value bg-hot-pink"></span>
                                                           ${color.thumb ? 
                                                               `<img class="lazyload" src="${color.thumb}" data-src="${color.thumb}" alt="${color.name}">` : 
                                                               `<img class="lazyload" src="${product.thumb || 'assets/images/products/product-7.jpg'}" data-src="${product.thumb || 'assets/images/products/product-7.jpg'}" alt="${color.name}">`
                                                           }
                                                       </li>
                                                   `).join('') 
                                                   : 
                                                   `<li class="product-color-item color-swatch hover-tooltip tooltip-bot active">
                                                       <span class="tooltip color-filter">Default</span>
                                                       <span class="swatch-value bg-hot-pink"></span>
                                                       <img class="lazyload" src="${product.thumb || 'assets/images/products/product-7.jpg'}" data-src="${product.thumb || 'assets/images/products/product-7.jpg'}" alt="${product.name}">
                                                   </li>`
                                               }
                                           </ul>
                                       </div>
                                   </div>
                               `;
                               // Insert into the main grid container instead of separate wishlist-products div
                               document.querySelector('.wrapper-wishlist').insertAdjacentHTML('beforeend', productHtml);
                           }
                       })
                       .catch(error => {
                           console.error('API Error for product', productId, ':', error);
                       });
               });
                      } else {
               // Show "no products" message when wishlist is empty
               document.querySelector('.wrapper-wishlist').innerHTML = `
                   <div class="text-center py-5 w-100">
                       <h3>NO PRODUCTS WERE ADDED TO THE WISHLIST</h3>
                       <p class="text-muted">Your wishlist is currently empty. Start shopping to add products!</p>
                   </div>
               `;
           }
         });
         
                  // Function to open quick view for a specific product
         function openQuickView(productId) {
             // Fetch product data for quick view
             fetch(`index.php?route=common/wishlist.getProduct&product_id=${productId}`)
                 .then(response => response.json())
                 .then(data => {
                     if (data.success) {
                         const product = data.data;
                         console.log('Quick view product data:', product);
                         
                         // Update quick view modal content
                         const quickViewModal = document.getElementById('quickView');
                         if (quickViewModal) {
                             // Update product name
                             const productName = quickViewModal.querySelector('.tf-product-title');
                             if (productName) productName.textContent = product.name;
                             
                             // Update product description
                             const productDesc = quickViewModal.querySelector('.product-infor-sub');
                             if (productDesc) productDesc.innerHTML = product.description || 'Product description not available.';
                             
                             // Update product images
                             const productImages = quickViewModal.querySelectorAll('.tf-product-media img');
                             productImages.forEach(img => {
                                 if (product.thumb) {
                                     img.src = product.thumb;
                                     img.dataset.src = product.thumb;
                                 }
                             });
                             
                             // Update prices
                             const priceOld = quickViewModal.querySelector('.price-old');
                             if (priceOld) priceOld.textContent = `$${product.price || '0.00'}`;
                             
                             const priceNew = quickViewModal.querySelector('.price-new');
                             if (priceNew) priceNew.textContent = `$${product.special || product.price || '0.00'}`;
                             
                             // Update product options if available
                             if (product.all_options && product.all_options.length > 0) {
                                 const optionsContainer = quickViewModal.querySelector('.tf-product-variant');
                                 if (optionsContainer) {
                                     let optionsHtml = '';
                                     product.all_options.forEach(option => {
                                         if (option.values && option.values.length > 0) {
                                             optionsHtml += `
                                                 <div class="variant-picker-item variant-${option.name.toLowerCase().replace(/\s+/g, '-')}">
                                                     <div class="variant-picker-label">
                                                         <div class="h4 fw-semibold">
                                                             ${option.name}
                                                             <span class="variant-picker-label-value value-current${option.name.replace(/\s+/g, '')}">${option.values[0].name}</span>
                                                         </div>
                                                     </div>
                                                     <div class="variant-picker-values">
                                                         ${option.values.map(value => `
                                                             <span class="${option.name.toLowerCase().replace(/\s+/g, '-')}-btn" data-${option.name.toLowerCase().replace(/\s+/g, '-')}="${value.name}">
                                                                 ${value.image ? `<img src="${value.image}" alt="${value.name}" style="width: 30px; height: 30px; border-radius: 50%;">` : ''}
                                                                 ${value.name}
                                                             </span>
                                                         `).join('')}
                                                     </div>
                                                 </div>
                                             `;
                                         }
                                     });
                                     optionsContainer.innerHTML = optionsHtml;
                                 }
                             }
                             
                             // Update quantity if available
                             const quantityInput = quickViewModal.querySelector('.quantity-product');
                             if (quantityInput && product.minimum) {
                                 quantityInput.value = product.minimum;
                             }
                             
                             // Update stock information
                             const stockInfo = quickViewModal.querySelector('.h6.d-none.d-sm-block');
                             if (stockInfo && product.quantity !== undefined) {
                                 stockInfo.textContent = `${product.quantity} products available`;
                             }
                         }
                     }
                 })
                 .catch(error => {
                     console.error('Error loading quick view data:', error);
                 });
         }
         
         // Function to remove product from wishlist
         function removeFromWishlist(productId) {
             // Remove from localStorage
             const offlineWishlist = JSON.parse(localStorage.getItem('offline_wishlist') || '[]');
             const updatedWishlist = offlineWishlist.filter(id => id !== productId);
             localStorage.setItem('offline_wishlist', JSON.stringify(updatedWishlist));
             
             // Remove from DOM
             const productElement = document.querySelector(`[data-product-id="${productId}"]`);
             if (productElement) {
                 productElement.remove();
             }
             
             // Check if wishlist is empty and show message
             if (updatedWishlist.length === 0) {
                 document.querySelector('.wrapper-wishlist').innerHTML = `
                     <div class="text-center py-5 w-100">
                         <h3>NO PRODUCTS WERE ADDED TO THE WISHLIST</h3>
                         <p class="text-muted">Your wishlist is currently empty. Start shopping to add products!</p>
                     </div>
                 `;
             }
         }
    </script>
{{ footer }}


